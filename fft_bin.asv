numberofbins = 500;
f_bin_avg_close = zeros(604,numberofbins);
f_bin_avg_far = zeros(1247,numberofbins);

%% First Data set
for i = 0:20
    [data,fs]=audioread(sprintf('AudioFiles 10.03.20/Nodule_taps/Nodule_tapstap%d.wav', i));                
    T = 1/fs;             % Sampling period       
    L = length(data);     % Length of signal
    t = (0:L-1)*T;        % Time vector

    data_fft = fft(data); % perform fourier transform
    P2 = abs(data_fft/L);
    P1 = P2(1:L/2+1);
    P1(2:end-1) = 2*P1(2:end-1); % disregard negative time
    
    binwidth = length(P1)/numberofbins;
    column = 1;
    oldii = 1;

    for ii = 1:binwidth:length(P1)
        f_bin_avg_close(i+1,column) = mean(P1(oldii:ii));
        oldii = ii;
        column = column + 1;
    end      
end

%% second dataset
for i = 0:20
    [data,fs]=audioread(sprintf('AudioFiles 10.03.20/No_Nodule_taps/No_Nodule_tapstap%d.wav', i));                
    T = 1/fs;         
    L = length(data);            
    t = (0:L-1)*T;        

    data_fft = fft(data);
    P2 = abs(data_fft/L);
    P1 = P2(1:L/2+1);
    P1(2:end-1) = 2*P1(2:end-1);
    
    binwidth = length(P1)/numberofbins;
    column = 1;
    oldii = 1;

    for ii = 1:binwidth:length(P1)
        f_bin_avg_far(i+1,column) = mean(P1(oldii:ii));
        oldii = ii;
        column = column + 1;
    end   
    
end

%% statistical testing

ttest2matrix = zeros(numberofbins, 3);
ttest2matrix(1,0) = 'Frequency Range'
ttest2matrix(2,0) = 'statistically significant?'
ttest2matrix(3,0) = 'p - value'


for i = 2:numberofbins+1
    [h,p] = ttest2(f_bin_avg_far(:,i), f_bin_avg_close(:,i), 'Alpha', 0.005);
    ttest2matrix(i,1) = sprintf('%d - %d', f(22500/oldi), f(22500/i))
    ttest2matrix(i,2) = h;
    ttest2matrix(i,3) = p;
    oldi = i
end




